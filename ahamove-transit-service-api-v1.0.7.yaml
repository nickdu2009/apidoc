swagger: '2.0'
info:
  description: |-
    This api doc contains 2 partsItem
    1. Api  is implemented by igloo
    2. WbHook Api is implemented by ahamove(The authentication method is defined by the partner)
  version: 1.0.7
  title: Ahamove Transit Service Api
  license:
    name: N/A
  contact:
    name: nick.du
    email: nick.du@iglooinsure.com
host: api.staging.iglooinsure.com
basePath: /v1/transit-ahamove/partner
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /transits:
    post:
      parameters:
        - in: body
          name: CreatePolicyRequest
          required: false
          schema:
            $ref: '#/definitions/CreateTransitRequest'
          x-examples:
            example-1:
              driver_id: string
              name: string
              address: string
              id: string
              purchased_timestamp: 0
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/CreateTransitResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unknown Error
          schema:
            $ref: '#/definitions/Error'
      operationId: Create Transits
      description: 'Through the API, Ahamove send the parcels data to igloo to create insurance policies'
      security:
        - ApiKeyAuth: []
      tags:
        - transit
      summary: Create Transits
    parameters: []
  '/transits/{transit_id}':
    get:
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetTransitResponse'
          examples:
            example-1:
              policy:
                state: Issued
                claim_period_end_timestamp: 0
                purchased_timestamp: 0
                policy_start_date: 0
                policy_end_date: 0
        '400':
          $ref: '#/responses/errBadRequestResponse'
        '403':
          $ref: '#/responses/errForbiddenResponse'
        default:
          description: Unknown Error
          schema:
            $ref: '#/definitions/Error'
      security:
        - ApiKeyAuth: []
      operationId: Get Transit
      description: Get Transit
      tags:
        - transit
      summary: Get Transit
    parameters:
      - type: string
        name: transit_id
        in: path
        description: 'The ID that uniquely identifies the parcel from the partner '
        required: true
    put:
      summary: Update Transit
      operationId: Update Transit
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              policy:
                $ref: '#/definitions/Policy'
        '401':
          $ref: '#/responses/errUnauthorizedResponse'
        '403':
          $ref: '#/responses/errForbiddenResponse'
        default:
          description: Unknown Error
          schema:
            $ref: '#/definitions/Error'
      description: Update Transit
      security:
        - ApiKeyAuth: []
      parameters:
        - in: body
          name: body
          schema:
            type: object
            properties:
              parcel_status:
                $ref: '#/definitions/ParcelStatus'
      tags:
        - transit
  '/transits/{transit_id}/claims':
    get:
      summary: Get Claim list
      parameters: []
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetClaimsResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unknown Error
          schema:
            $ref: '#/definitions/Error'
      security:
        - ApiKeyAuth: []
      operationId: Get claim list of transit
      description: Get claim list of transit
      tags:
        - claim
    parameters:
      - type: string
        name: transit_id
        in: path
        required: true
        description: 'The ID that uniquely identifies the parcel from the partner '
  '/claims/{claim_id}':
    get:
      summary: Get Claim
      parameters:
        - name: claim_id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GetClaimResponse'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/Error'
        '403':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
        default:
          description: Unknown Error
          schema:
            $ref: '#/definitions/Error'
      security:
        - ApiKeyAuth: []
      tags:
        - claim
      description: Get Claim
      operationId: Get Claim
    parameters:
      - type: string
        name: claim_id
        in: path
        required: true
        description: Claim ID of igloo
  '/claims/{claim_id}/reimburse':
    parameters:
      - type: string
        name: claim_id
        in: path
        required: true
        description: Claim ID of igloo
    put:
      summary: Approved Claim Reimburse
      operationId: Approved Claim Reimburse
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              claim:
                $ref: '#/definitions/Claim'
        '400':
          $ref: '#/responses/errForbiddenResponse'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/Error'
      tags:
        - claim
      description: The partner calls the api to notify igloo after completing the approved claim payment
      parameters:
        - in: body
          name: body
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                reimbursed_timestamp: 0
            properties:
              reimbursed_timestamp:
                type: integer
                format: int64
                description: unix timestamp(second)
            required:
              - reimbursed_timestamp
      security:
        - ApiKeyAuth: []
  '/webhook/transits/{transit_id}':
    parameters:
      - type: string
        name: transit_id
        in: path
        required: true
        description: 'The ID that uniquely identifies the parcel from the partner '
    put:
      summary: ''
      operationId: Notify Policy State Change
      responses:
        '200':
          description: OK
      description: Notify Policy State Change
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/NotifyPolicy'
          description: ''
      tags:
        - webhook
  '/webhook/claims/{claim_id}':
    parameters:
      - type: string
        name: claim_id
        in: path
        required: true
        description: Claim ID of igloo
    put:
      summary: ''
      operationId: Notify Claim State Change
      responses:
        '200':
          description: OK
      description: Notify Claim State Change
      security:
        - ApiKeyAuth: []
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/NotifyClaim'
      tags:
        - webhook
  '/transits/{transit_id}/claim_portal_url':
    parameters:
      - type: string
        name: transit_id
        in: path
        required: true
        description: 'The ID that uniquely identifies the parcel from the partner '
    get:
      summary: Claim Web Portal URL
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              url:
                type: string
                description: Use a browser or webview to open the URL and enter the igloo claim web portal to submit claim
        '400':
          $ref: '#/responses/errBadRequestResponse'
        '403':
          $ref: '#/responses/errForbiddenResponse'
      operationId: Get Claim Web Portal URL by Transit ID
      description: Get Claim Web Portal URL by Transit ID
      security:
        - ApiKeyAuth: []
      tags:
        - transit
  /transits/multi_cancel:
    put:
      summary: Cancel Multi Policies Of An Order
      tags:
        - transit
      operationId: Cancel Multi Policies Of An Order
      description: Cancel Multi Policies Of An Order
      security:
        - ApiKeyAuth: []
      parameters:
        - in: body
          name: order_id
          schema:
            $ref: '#/definitions/TransitsMultiCancel'
          required: true
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              success:
                type: boolean
                description: 'true: success; false: fail'
              reason:
                type: string
                description: fail_reason if cancel failed
              policy:
                $ref: '#/definitions/Policy'
        '400':
          $ref: '#/responses/errBadRequestResponse'
        '403':
          $ref: '#/responses/errForbiddenResponse'
        default:
          description: Unknown Error
          schema:
            $ref: '#/definitions/Error'
securityDefinitions:
  ApiKeyAuth:
    type: apiKey
    name: X-Axinan-Key
    in: header
definitions:
  CreateTransitObj:
    type: object
    properties:
      transit_id:
        type: string
        description: 'The ID that uniquely identifies the parcel from the partner '
      tracking_number:
        type: string
        description: The tracking number of the parcel
      parcel_description:
        type: string
      ship_from:
        $ref: '#/definitions/Address'
      ship_to:
        $ref: '#/definitions/Address'
      sender:
        $ref: '#/definitions/Sender'
      booker:
        $ref: '#/definitions/Booker'
      receiver:
        $ref: '#/definitions/Receiver'
      item:
        type: object
        properties:
          total_price:
            type: number
            format: double
            description: |-
              total price of item, This field must be set when one of the following situations occurs
              1. When all parcels in the order are of cod type
              2. When the package in the order has cod type and non-cod type
      categories:
        type: array
        uniqueItems: true
        description: 'Categories of all goods in the transit，If the value of is_non_cod is equal to true, this field must be set'
        items: {}
      item_value:
        type: number
        format: float
        description: |-
          for prepaid value
          order of Key Account, If customer is a key account, this field must be set
      is_non_cod:
        type: boolean
        description: 'If the transit is non-cod, please set the field to true, otherwise please set it to false'
    required:
      - transit_id
      - tracking_number
  Address:
    type: object
    x-examples:
      example-1:
        formatted_address: string
        address: 2 Havelock Road
        city: Jakarta
        country_code: ID
        zip: '05225'
    properties:
      formatted_address:
        type: string
        description: Full Address
      address:
        type: string
        example: 2 Havelock Road
        description: Mailing address
      city:
        type: string
        example: Jakarta
        description: 'The city, town, or village.'
      country_code:
        type: string
        example: ID
        description: The two-letter country code corresponding to the  country.
      zip:
        type: string
        example: '05225'
        description: 'The  postal code, also known as zip, postcode, Eircode, etc.'
    required:
      - formatted_address
  Policy:
    type: object
    properties:
      state:
        $ref: '#/definitions/PolicyState'
      claim_period_end_timestamp:
        type: integer
        format: int64
        description: unix timestamp(sec) of claim period end
      purchased_timestamp:
        type: integer
        format: int64
        description: unix timestamp(sec) of purchase policy
      policy_start_timestamp:
        type: integer
        format: int64
        description: unix timestamp(sec)  of  The start date of the policy corresponding to the parcel
      policy_end_timestamp:
        type: integer
        format: int64
        description: unix timestamp(sec) of The end date of the policy corresponding to the parcel
      url:
        type: string
        description: Use a browser or webview to open the URL and enter the igloo claim web portal to submit claim
  NotifyPolicy:
    type: object
    properties:
      state:
        $ref: '#/definitions/PolicyState'
  CreateTransitRequest:
    type: object
    description: ''
    x-examples:
      example-1:
        order_id: string
        order_created_date: -9223372036854776000
        order_paid_date: -9223372036854776000
        order_currency: string
        premium:
          type: number
          format: double
          description: Premium calculated by partner (order_level)
        transit_id: string
        tracking_number: string
        ship_from:
          formatted_address: string
          address: 2 Havelock Road
          city: Jakarta
          country_code: ID
          zip: '05225'
        ship_to:
          formatted_address: string
          address: 2 Havelock Road
          city: Jakarta
          country_code: ID
          zip: '05225'
        sender:
          id: string
          name: string
          email: string
          phone: string
        booker:
          id: string
          name: string
          email: string
          phone: string
        receiver:
          id: string
          name: string
          email: string
          phone: string
        item:
          total_price: -1.7976931348623157e+308
    properties:
      order_id:
        type: string
        description: The order ID
      order_created_date:
        type: integer
        description: unix timestamp(sec) of Order created time
        format: int64
      order_paid_date:
        type: integer
        description: unix timestamp(sec) of Order payment time
        format: int64
      order_currency:
        type: string
        description: Payment currency type of the order
        enum:
          - VND
      premium:
        type: number
        format: double
        description: Premium calculated by partner
      transits:
        type: array
        description: Detail info for parcels
        items:
          $ref: '#/definitions/CreateTransitObj'
      source_partner:
        type: string
        enum:
          - ka
        description: 'When the user is a key account, please set the value of this field to ka, otherwise please do not set the value of this field'
        items:
          type: string
          enum:
            - electronics
            - health & beauty
            - housing & lifestyle
            - cake
            - cigarette
            - drink
            - fashion
            - food
            - grocery
            - individual needs
            - mother & baby
            - transportation
            - restaurant
            - sport
            - other
    required:
      - order_id
      - order_created_date
      - order_paid_date
      - order_currency
      - transits
  CreateTransitResponse:
    type: object
    properties:
      premium:
        type: number
        format: double
        description: Premium calculated by Iglooinsure
      results:
        type: array
        items:
          $ref: '#/definitions/Policy'
  GetTransitResponse:
    type: object
    properties:
      policy:
        $ref: '#/definitions/Policy'
      url:
        type: string
        description: Use a browser or webview to open the URL and enter the igloo claim web portal to submit claim
  Claim:
    type: object
    properties:
      id:
        type: string
        description: claim id of igloo
      state:
        $ref: '#/definitions/ClaimState'
      approved_amount:
        type: number
        format: float
        description: This field is only valid when the claim is approved
      claimed_amount:
        type: number
        format: float
      claim_type:
        $ref: '#/definitions/ClaimType'
  TransitsMultiCancel:
    type: object
    properties:
      order_id:
        type: string
        description: order id of ahamove
  NotifyClaim:
    type: object
    properties:
      state:
        $ref: '#/definitions/ClaimState'
      transit_id:
        type: string
        description: 'The ID that uniquely identifies the parcel from the partner '
  GetClaimResponse:
    type: object
    properties:
      claim:
        $ref: '#/definitions/Claim'
  GetClaimsResponse:
    type: object
    properties:
      claims:
        type: array
        items:
          $ref: '#/definitions/Claim'
  ClaimState:
    type: string
    enum:
      - Requested
      - Approved
      - Rejected
      - Pending Proof
      - Cancelled
    x-examples:
      example-1: Requested
  PolicyState:
    type: string
    enum:
      - Issued
      - Activated
      - Ended
      - Expired
      - Cancelled
  Error:
    type: object
    properties:
      code:
        type: string
        description: A short string with a brief explanation of the error
      message:
        type: string
        description: Detailed description of the error
  Sender:
    title: Sender
    type: object
    x-examples:
      example-1:
        id: string
        name: string
        email: string
        phone: string
    properties:
      id:
        type: string
        description: User ID of sender from partner
      name:
        type: string
        description: The name of the sender
      email:
        type: string
        description: The sender's email
      phone:
        type: string
        description: The sender's phone number
    required:
      - phone
  Booker:
    title: Booker
    type: object
    x-examples:
      example-1:
        id: string
        name: string
        email: string
        phone: string
    properties:
      id:
        type: string
        description: User ID of booker from partner
      name:
        type: string
        description: The name of the booker
      email:
        type: string
        description: The booker's email
      phone:
        type: string
        description: The booker's phone number
    required:
      - id
      - name
      - phone
  Receiver:
    title: Receiver
    type: object
    properties:
      id:
        type: string
        description: User ID of sender from partner
      name:
        type: string
        description: The name of the sender
      email:
        type: string
        description: The sender's email
      phone:
        type: string
        description: The sender's phone number
    required:
      - phone
  ParcelStatus:
    title: ParcelStatus
    type: object
    properties:
      status:
        type: string
        description: Status of the parcel from the partner
      status_at_date_timestamp:
        type: integer
        format: int64
        description: Date/time of parcel update to status(unix timestamp(second))
      location:
        type: string
        description: Location of the parcel from partner
      remarks_or_failed_reason:
        type: string
        description: Remarks from the partner
      billing_pictures:
        type: array
        description: Billing pictures url b merchant
        items:
          type: string
      product_pictures:
        type: array
        description: Products pictures url taken by driver
        items:
          type: string
    required:
      - status
      - status_at_date_timestamp
  ClaimType:
    type: string
    title: ClaimType
    enum:
      - Lost
      - Damage
parameters: {}
responses:
  errBadRequestResponse:
    description: Bad Request
    schema:
      $ref: '#/definitions/Error'
  errUnauthorizedResponse:
    description: Unauthorized
    schema:
      $ref: '#/definitions/Error'
  errRequestFailedResponse:
    description: Request Failed
    schema:
      $ref: '#/definitions/Error'
  errForbiddenResponse:
    description: Forbidden
    schema:
      $ref: '#/definitions/Error'
  errNotFoundResponse:
    description: Not found
    schema:
      $ref: '#/definitions/Error'
  errConflictResponse:
    description: Conflict
    schema:
      $ref: '#/definitions/Error'
  errTooManyRequestsResponse:
    description: Too Many Requests
    schema:
      $ref: '#/definitions/Error'
  errServerErrorsResponse:
    description: Server Errors
    schema:
      $ref: '#/definitions/Error'
  defaultErrorResponse:
    description: Unknown Error
    schema:
      $ref: '#/definitions/Error'
  healthCheckResponse:
    description: Server health status
    schema:
      type: string
      example: OK
  simpleStringResponse:
    description: Simple String Response
    schema:
      type: object
    examples:
      example-1: {}
security:
  - ApiKeyAuth: []
